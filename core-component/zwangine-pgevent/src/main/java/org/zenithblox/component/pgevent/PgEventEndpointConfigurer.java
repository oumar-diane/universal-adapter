/* Generated by zwangine build tools - do NOT edit this file! */
package org.zenithblox.component.pgevent;

import org.zenithblox.ZwangineContext;
import org.zenithblox.spi.GeneratedPropertyConfigurer;
import org.zenithblox.spi.PropertyConfigurerGetter;
import org.zenithblox.support.component.PropertyConfigurerSupport;

import javax.annotation.processing.Generated;

/**
 * Generated by zwangine build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class PgEventEndpointConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(ZwangineContext zwangineContext, Object obj, String name, Object value, boolean ignoreCase) {
        PgEventEndpoint target = (PgEventEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(zwangineContext, boolean.class, value)); return true;
        case "datasource": target.setDatasource(property(zwangineContext, javax.sql.DataSource.class, value)); return true;
        case "exceptionhandler":
        case "exceptionHandler": target.setExceptionHandler(property(zwangineContext, org.zenithblox.spi.ExceptionHandler.class, value)); return true;
        case "exchangepattern":
        case "exchangePattern": target.setExchangePattern(property(zwangineContext, org.zenithblox.ExchangePattern.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(zwangineContext, boolean.class, value)); return true;
        case "pass": target.setPass(property(zwangineContext, String.class, value)); return true;
        case "user": target.setUser(property(zwangineContext, String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return boolean.class;
        case "datasource": return javax.sql.DataSource.class;
        case "exceptionhandler":
        case "exceptionHandler": return org.zenithblox.spi.ExceptionHandler.class;
        case "exchangepattern":
        case "exchangePattern": return org.zenithblox.ExchangePattern.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "pass": return String.class;
        case "user": return String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        PgEventEndpoint target = (PgEventEndpoint) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return target.isBridgeErrorHandler();
        case "datasource": return target.getDatasource();
        case "exceptionhandler":
        case "exceptionHandler": return target.getExceptionHandler();
        case "exchangepattern":
        case "exchangePattern": return target.getExchangePattern();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "pass": return target.getPass();
        case "user": return target.getUser();
        default: return null;
        }
    }
}

