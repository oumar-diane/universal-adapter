/* Generated by zwangine build tools - do NOT edit this file! */
package org.zenithblox.component.log;

import org.zenithblox.ZwangineContext;
import org.zenithblox.spi.GeneratedPropertyConfigurer;
import org.zenithblox.spi.PropertyConfigurerGetter;
import org.zenithblox.support.component.PropertyConfigurerSupport;

import javax.annotation.processing.Generated;

/**
 * Generated by zwangine build tools - do NOT edit this file!
 */
@Generated("org.zenithblox.maven.packaging.EndpointSchemaGeneratorMojo")
@SuppressWarnings("unchecked")
public class LogComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    @Override
    public boolean configure(ZwangineContext zwangineContext, Object obj, String name, Object value, boolean ignoreCase) {
        LogComponent target = (LogComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": target.setAutowiredEnabled(property(zwangineContext, boolean.class, value)); return true;
        case "exchangeformatter":
        case "exchangeFormatter": target.setExchangeFormatter(property(zwangineContext, org.zenithblox.spi.ExchangeFormatter.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(zwangineContext, boolean.class, value)); return true;
        case "sourcelocationloggername":
        case "sourceLocationLoggerName": target.setSourceLocationLoggerName(property(zwangineContext, boolean.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public String[] getAutowiredNames() {
        return new String[]{"exchangeFormatter"};
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return boolean.class;
        case "exchangeformatter":
        case "exchangeFormatter": return org.zenithblox.spi.ExchangeFormatter.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "sourcelocationloggername":
        case "sourceLocationLoggerName": return boolean.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        LogComponent target = (LogComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return target.isAutowiredEnabled();
        case "exchangeformatter":
        case "exchangeFormatter": return target.getExchangeFormatter();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "sourcelocationloggername":
        case "sourceLocationLoggerName": return target.isSourceLocationLoggerName();
        default: return null;
        }
    }
}

