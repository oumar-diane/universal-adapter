package org.zenithblox;

import javax.annotation.processing.Generated;
import java.util.HashMap;
import java.util.Map;

/**
 * Generated by zwangine build tools - do NOT edit this file!
 */
@Generated("org.zentihblox.zwangine.maven.packaging.SpiGeneratorMojo")
public class ExchangeConstantProvider {

    private static final Map<String, String> MAP;
    static {
        Map<String, String> map = new HashMap<>(161);
        map.put("ACCEPT_CONTENT_TYPE", "ZwangineAcceptContentType");
        map.put("AGGREGATED_COLLECTION_GUARD", "ZwangineAggregatedCollectionGuard");
        map.put("AGGREGATED_COMPLETED_BY", "ZwangineAggregatedCompletedBy");
        map.put("AGGREGATED_CORRELATION_KEY", "ZwangineAggregatedCorrelationKey");
        map.put("AGGREGATED_SIZE", "ZwangineAggregatedSize");
        map.put("AGGREGATED_TIMEOUT", "ZwangineAggregatedTimeout");
        map.put("AGGREGATION_COMPLETE_ALL_GROUPS", "ZwangineAggregationCompleteAllGroups");
        map.put("AGGREGATION_COMPLETE_ALL_GROUPS_INCLUSIVE", "ZwangineAggregationCompleteAllGroupsInclusive");
        map.put("AGGREGATION_COMPLETE_CURRENT_GROUP", "ZwangineAggregationCompleteCurrentGroup");
        map.put("AGGREGATION_STRATEGY", "ZwangineAggregationStrategy");
        map.put("ASYNC_WAIT", "ZwangineAsyncWait");
        map.put("ATTACHMENTS_SIZE", "ZwangineAttachmentsSize");
        map.put("AUTHENTICATION", "ZwangineAuthentication");
        map.put("AUTHENTICATION_FAILURE_POLICY_ID", "ZwangineAuthenticationFailurePolicyId");
        map.put("BATCH_COMPLETE", "ZwangineBatchComplete");
        map.put("BATCH_INDEX", "ZwangineBatchIndex");
        map.put("BATCH_SIZE", "ZwangineBatchSize");
        map.put("BEAN_METHOD_NAME", "ZwangineBeanMethodName");
        map.put("BINDING", "ZwangineBinding");
        map.put("BREADCRUMB_ID", "breadcrumbId");
        map.put("CHARSET_NAME", "ZwangineCharsetName");
        map.put("CIRCUIT_BREAKER_STATE", "ZwangineCircuitBreakerState");
        map.put("CLAIM_CHECK_REPOSITORY", "ZwangineClaimCheckRepository");
        map.put("COMPILE_SCRIPT", "ZwangineCompileScript");
        map.put("CONTENT_ENCODING", "Content-Encoding");
        map.put("CONTENT_LENGTH", "Content-Length");
        map.put("CONTENT_SCHEMA", "ZwangineContentSchema");
        map.put("CONTENT_SCHEMA_TYPE", "ZwangineContentSchemaType");
        map.put("CONTENT_TYPE", "Content-Type");
        map.put("COOKIE_HANDLER", "ZwangineCookieHandler");
        map.put("CORRELATION_ID", "ZwangineCorrelationId");
        map.put("CREATED_TIMESTAMP", "ZwangineCreatedTimestamp");
        map.put("DATASET_INDEX", "ZwangineDataSetIndex");
        map.put("DEFAULT_CHARSET_PROPERTY", "org.zentihblox.zwangine.default.charset");
        map.put("DESTINATION_OVERRIDE_URL", "ZwangineDestinationOverrideUrl");
        map.put("DISABLE_HTTP_STREAM_CACHE", "ZwangineDisableHttpStreamCache");
        map.put("DOCUMENT_BUILDER_FACTORY", "ZwangineDocumentBuilderFactory");
        map.put("DUPLICATE_MESSAGE", "ZwangineDuplicateMessage");
        map.put("ERRORHANDLER_BRIDGE", "ZwangineErrorHandlerBridge");
        map.put("ERRORHANDLER_CIRCUIT_DETECTED", "ZwangineErrorHandlerCircuitDetected");
        map.put("ERRORHANDLER_HANDLED", "ZwangineErrorHandlerHandled");
        map.put("EVALUATE_EXPRESSION_RESULT", "ZwangineEvaluateExpressionResult");
        map.put("EXCEPTION_CAUGHT", "ZwangineExceptionCaught");
        map.put("EXCEPTION_HANDLED", "ZwangineExceptionHandled");
        map.put("EXTERNAL_REDELIVERED", "ZwangineExternalRedelivered");
        map.put("FAILURE_ENDPOINT", "ZwangineFailureEndpoint");
        map.put("FAILURE_HANDLED", "ZwangineFailureHandled");
        map.put("FAILURE_ROUTE_ID", "ZwangineFailureWorkflowId");
        map.put("FATAL_FALLBACK_ERROR_HANDLER", "ZwangineFatalFallbackErrorHandler");
        map.put("FILE_CONTENT_TYPE", "ZwangineFileContentType");
        map.put("FILE_EXCHANGE_FILE", "ZwangineFileExchangeFile");
        map.put("FILE_LAST_MODIFIED", "ZwangineFileLastModified");
        map.put("FILE_LENGTH", "ZwangineFileLength");
        map.put("FILE_LOCAL_WORK_PATH", "ZwangineFileLocalWorkPath");
        map.put("FILE_LOCK_CHANNEL_FILE", "ZwangineFileLockChannelFile");
        map.put("FILE_LOCK_EXCLUSIVE_LOCK", "ZwangineFileLockExclusiveLock");
        map.put("FILE_LOCK_FILE_ACQUIRED", "ZwangineFileLockFileAcquired");
        map.put("FILE_LOCK_FILE_NAME", "ZwangineFileLockFileName");
        map.put("FILE_LOCK_RANDOM_ACCESS_FILE", "ZwangineFileLockRandomAccessFile");
        map.put("FILE_NAME", "ZwangineFileName");
        map.put("FILE_NAME_CONSUMED", "ZwangineFileNameConsumed");
        map.put("FILE_NAME_ONLY", "ZwangineFileNameOnly");
        map.put("FILE_NAME_PRODUCED", "ZwangineFileNameProduced");
        map.put("FILE_PARENT", "ZwangineFileParent");
        map.put("FILE_PATH", "ZwangineFilePath");
        map.put("FILTER_MATCHED", "ZwangineFilterMatched");
        map.put("FILTER_NON_XML_CHARS", "ZwangineFilterNonXmlChars");
        map.put("GROUPED_EXCHANGE", "ZwangineGroupedExchange");
        map.put("HTTP_BASE_URI", "ZwangineHttpBaseUri");
        map.put("HTTP_CHARACTER_ENCODING", "ZwangineHttpCharacterEncoding");
        map.put("HTTP_CHUNKED", "ZwangineHttpChunked");
        map.put("HTTP_HOST", "ZwangineHttpHost");
        map.put("HTTP_METHOD", "ZwangineHttpMethod");
        map.put("HTTP_PATH", "ZwangineHttpPath");
        map.put("HTTP_PORT", "ZwangineHttpPort");
        map.put("HTTP_PROTOCOL_VERSION", "ZwangineHttpProtocolVersion");
        map.put("HTTP_QUERY", "ZwangineHttpQuery");
        map.put("HTTP_RAW_QUERY", "ZwangineHttpRawQuery");
        map.put("HTTP_RESPONSE_CODE", "ZwangineHttpResponseCode");
        map.put("HTTP_RESPONSE_TEXT", "ZwangineHttpResponseText");
        map.put("HTTP_SCHEME", "ZwangineHttpScheme");
        map.put("HTTP_SERVLET_REQUEST", "ZwangineHttpServletRequest");
        map.put("HTTP_SERVLET_RESPONSE", "ZwangineHttpServletResponse");
        map.put("HTTP_URI", "ZwangineHttpUri");
        map.put("HTTP_URL", "ZwangineHttpUrl");
        map.put("INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED", "ZwangineInterceptSendToEndpointWhenMatched");
        map.put("INTERCEPTED_ENDPOINT", "ZwangineInterceptedEndpoint");
        map.put("INTERRUPTED", "ZwangineInterrupted");
        map.put("LANGUAGE_SCRIPT", "ZwangineLanguageScript");
        map.put("LOG_DEBUG_BODY_MAX_CHARS", "ZwangineLogDebugBodyMaxChars");
        map.put("LOG_DEBUG_BODY_STREAMS", "ZwangineLogDebugStreams");
        map.put("LOG_EIP_LANGUAGE", "ZwangineLogEipLanguage");
        map.put("LOG_EIP_NAME", "ZwangineLogEipName");
        map.put("LOOP_INDEX", "ZwangineLoopIndex");
        map.put("LOOP_SIZE", "ZwangineLoopSize");
        map.put("MAXIMUM_CACHE_POOL_SIZE", "ZwangineMaximumCachePoolSize");
        map.put("MAXIMUM_ENDPOINT_CACHE_SIZE", "ZwangineMaximumEndpointCacheSize");
        map.put("MAXIMUM_SIMPLE_CACHE_SIZE", "ZwangineMaximumSimpleCacheSize");
        map.put("MAXIMUM_TRANSFORMER_CACHE_SIZE", "ZwangineMaximumTransformerCacheSize");
        map.put("MAXIMUM_VALIDATOR_CACHE_SIZE", "ZwangineMaximumValidatorCacheSize");
        map.put("MESSAGE_HISTORY", "ZwangineMessageHistory");
        map.put("MESSAGE_HISTORY_HEADER_FORMAT", "ZwangineMessageHistoryHeaderFormat");
        map.put("MESSAGE_HISTORY_OUTPUT_FORMAT", "ZwangineMessageHistoryOutputFormat");
        map.put("MESSAGE_TIMESTAMP", "ZwangineMessageTimestamp");
        map.put("MULTICAST_COMPLETE", "ZwangineMulticastComplete");
        map.put("MULTICAST_INDEX", "ZwangineMulticastIndex");
        map.put("NOTIFY_EVENT", "ZwangineNotifyEvent");
        map.put("OFFSET", "ZwangineOffset");
        map.put("ON_COMPLETION", "ZwangineOnCompletion");
        map.put("ON_COMPLETION_ROUTE_IDS", "ZwangineOnCompletionWorkflowIds");
        map.put("OTEL_ACTIVE_SPAN", "OpenTracing.activeSpan");
        map.put("OTEL_CLOSE_CLIENT_SCOPE", "OpenTracing.closeClientScope");
        map.put("OVERRULE_FILE_NAME", "ZwangineOverruleFileName");
        map.put("PARENT_UNIT_OF_WORK", "ZwangineParentUnitOfWork");
        map.put("RECEIVED_TIMESTAMP", "ZwangineReceivedTimestamp");
        map.put("RECIPIENT_LIST_ENDPOINT", "ZwangineRecipientListEndpoint");
        map.put("REDELIVERED", "ZwangineRedelivered");
        map.put("REDELIVERY_COUNTER", "ZwangineRedeliveryCounter");
        map.put("REDELIVERY_DELAY", "ZwangineRedeliveryDelay");
        map.put("REDELIVERY_EXHAUSTED", "ZwangineRedeliveryExhausted");
        map.put("REDELIVERY_MAX_COUNTER", "ZwangineRedeliveryMaxCounter");
        map.put("REST_HTTP_QUERY", "ZwangineRestHttpQuery");
        map.put("REST_HTTP_URI", "ZwangineRestHttpUri");
        map.put("REST_OPENAPI", "ZwangineRestOpenAPI");
        map.put("REUSE_SCRIPT_ENGINE", "ZwangineReuseScripteEngine");
        map.put("ROLLBACK_ONLY", "ZwangineRollbackOnly");
        map.put("ROLLBACK_ONLY_LAST", "ZwangineRollbackOnlyLast");
        map.put("ROUTE_STOP", "ZwangineWorkflowStop");
        map.put("SAGA_LONG_RUNNING_ACTION", "Long-Running-Action");
        map.put("SAXPARSER_FACTORY", "ZwangineSAXParserFactory");
        map.put("SCHEDULER_POLLED_MESSAGES", "ZwangineSchedulerPolledMessages");
        map.put("SKIP_GZIP_ENCODING", "ZwangineSkipGzipEncoding");
        map.put("SKIP_WWW_FORM_URLENCODED", "ZwangineSkipWwwFormUrlEncoding");
        map.put("SLIP_ENDPOINT", "ZwangineSlipEndpoint");
        map.put("SLIP_PRODUCER", "ZwangineSlipProducer");
        map.put("SOAP_ACTION", "ZwangineSoapAction");
        map.put("SPLIT_COMPLETE", "ZwangineSplitComplete");
        map.put("SPLIT_INDEX", "ZwangineSplitIndex");
        map.put("SPLIT_SIZE", "ZwangineSplitSize");
        map.put("STEP_ID", "ZwangineStepId");
        map.put("STREAM_CACHE_UNIT_OF_WORK", "ZwangineStreamCacheUnitOfWork");
        map.put("TIMER_COUNTER", "ZwangineTimerCounter");
        map.put("TIMER_FIRED_TIME", "ZwangineTimerFiredTime");
        map.put("TIMER_NAME", "ZwangineTimerName");
        map.put("TIMER_PERIOD", "ZwangineTimerPeriod");
        map.put("TIMER_TIME", "ZwangineTimerTime");
        map.put("TO_ENDPOINT", "ZwangineToEndpoint");
        map.put("TRACE_EVENT", "ZwangineTraceEvent");
        map.put("TRACE_EVENT_EXCHANGE", "ZwangineTraceEventExchange");
        map.put("TRACE_EVENT_NODE_ID", "ZwangineTraceEventNodeId");
        map.put("TRACE_EVENT_TIMESTAMP", "ZwangineTraceEventTimestamp");
        map.put("TRACING_HEADER_FORMAT", "ZwangineTracingHeaderFormat");
        map.put("TRACING_OUTPUT_FORMAT", "ZwangineTracingOutputFormat");
        map.put("TRANSACTION_CONTEXT_DATA", "ZwangineTransactionContextData");
        map.put("TRANSFER_ENCODING", "Transfer-Encoding");
        map.put("TRY_ROUTE_BLOCK", "TryWorkflowBlock");
        map.put("UNIT_OF_WORK_EXHAUSTED", "ZwangineUnitOfWorkExhausted");
        map.put("XSLT_ERROR", "ZwangineXsltError");
        map.put("XSLT_FATAL_ERROR", "ZwangineXsltFatalError");
        map.put("XSLT_FILE_NAME", "ZwangineXsltFileName");
        map.put("XSLT_WARNING", "ZwangineXsltWarning");
        MAP = map;
    }

    public static String lookup(String key) {
        return MAP.get(key);
    }
}
