{
  "model": {
    "kind": "model",
    "name": "workflow",
    "title": "Route",
    "description": "A Camel workflow",
    "deprecated": false,
    "label": "configuration",
    "javaType": "org.zenithblox.model.RouteDefinition",
    "abstract": false,
    "input": true,
    "output": true
  },
  "properties": {
    "id": { "index": 0, "kind": "attribute", "displayName": "Id", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the id of this node" },
    "description": { "index": 1, "kind": "attribute", "displayName": "Description", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the description of this node" },
    "group": { "index": 2, "kind": "attribute", "displayName": "Group", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The group name for this workflow. Multiple workflows can belong to the same group." },
    "nodePrefixId": { "index": 3, "kind": "attribute", "displayName": "Node Prefix Id", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets a prefix to use for all node ids (not workflow id)." },
    "workflowConfigurationId": { "index": 4, "kind": "attribute", "displayName": "Route Configuration Id", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The workflow configuration id or pattern this workflow should use for configuration. Multiple id\/pattern can be separated by comma." },
    "autoStartup": { "index": 5, "kind": "attribute", "displayName": "Auto Startup", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "true", "description": "Whether to auto start this workflow" },
    "startupOrder": { "index": 6, "kind": "attribute", "displayName": "Startup Order", "group": "advanced", "label": "advanced", "required": false, "type": "integer", "javaType": "java.lang.Integer", "deprecated": false, "autowired": false, "secret": false, "description": "To configure the ordering of the workflows being started" },
    "streamCache": { "index": 7, "kind": "attribute", "displayName": "Stream Cache", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether stream caching is enabled on this workflow." },
    "trace": { "index": 8, "kind": "attribute", "displayName": "Trace", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether tracing is enabled on this workflow." },
    "messageHistory": { "index": 9, "kind": "attribute", "displayName": "Message History", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Whether message history is enabled on this workflow." },
    "logMask": { "index": 10, "kind": "attribute", "displayName": "Log Mask", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "false", "description": "Whether security mask for Logging is enabled on this workflow." },
    "delayer": { "index": 11, "kind": "attribute", "displayName": "Delayer", "group": "common", "required": false, "type": "duration", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "defaultValue": "advanced", "description": "Whether to slow down processing messages by a given delay in msec." },
    "errorHandlerRef": { "index": 12, "kind": "attribute", "displayName": "Error Handler", "group": "error", "label": "error", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the bean ref name of the error handler builder to use on this workflow" },
    "workflowPolicyRef": { "index": 13, "kind": "attribute", "displayName": "Route Policy", "group": "common", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "Reference to custom org.zenithblox.spi.RoutePolicy to use by the workflow. Multiple policies can be configured by separating values using comma." },
    "shutdownRoute": { "index": 14, "kind": "attribute", "displayName": "Shutdown Route", "group": "advanced", "label": "advanced", "required": false, "type": "enum", "javaType": "org.zenithblox.ShutdownRoute", "enum": [ "Default", "Defer" ], "deprecated": false, "autowired": false, "secret": false, "description": "To control how to shutdown the workflow." },
    "shutdownRunningTask": { "index": 15, "kind": "attribute", "displayName": "Shutdown Running Task", "group": "advanced", "label": "advanced", "required": false, "type": "enum", "javaType": "org.zenithblox.ShutdownRunningTask", "enum": [ "CompleteCurrentTaskOnly", "CompleteAllTasks" ], "deprecated": false, "autowired": false, "secret": false, "description": "To control how to shut down the workflow." },
    "precondition": { "index": 16, "kind": "attribute", "displayName": "Precondition", "group": "advanced", "label": "advanced", "required": false, "type": "string", "javaType": "java.lang.String", "deprecated": false, "autowired": false, "secret": false, "description": "The predicate of the precondition in simple language to evaluate in order to determine if this workflow should be included or not." },
    "errorHandler": { "index": 17, "kind": "element", "displayName": "Error Handler", "group": "error", "label": "error", "required": false, "type": "object", "javaType": "org.zenithblox.model.ErrorHandlerDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Sets the error handler to use for this workflow" },
    "inputType": { "index": 18, "kind": "element", "displayName": "Input Type", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.zenithblox.model.InputTypeDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Declare the expected data type of the input message. If the actual message type is different at runtime, camel look for a required org.zenithblox.spi.Transformer and apply if exists. The type name consists of two parts, 'scheme' and 'name' connected with ':'. For Java type 'name' is a fully qualified class name. For example {code java:java.lang.String} , {code json:ABCOrder} ." },
    "outputType": { "index": 19, "kind": "element", "displayName": "Output Type", "group": "advanced", "label": "advanced", "required": false, "type": "object", "javaType": "org.zenithblox.model.OutputTypeDefinition", "deprecated": false, "autowired": false, "secret": false, "description": "Declare the expected data type of the output message. If the actual message type is different at runtime, camel look for a required org.zenithblox.spi.Transformer and apply if exists. The type name consists of two parts, 'scheme' and 'name' connected with ':'. For Java type 'name' is a fully qualified class name. For example {code java:java.lang.String} , {code json:ABCOrder} ." },
    "input": { "index": 20, "kind": "element", "displayName": "Input", "group": "common", "required": true, "type": "object", "javaType": "org.zenithblox.model.FromDefinition", "oneOf": [ "from" ], "deprecated": false, "autowired": false, "secret": false, "description": "Input to the workflow." },
    "outputs": { "index": 21, "kind": "element", "displayName": "Outputs", "group": "common", "required": true, "type": "array", "javaType": "java.util.List<org.zenithblox.model.ProcessorDefinition<?>>", "oneOf": [ "aggregate", "bean", "choice", "circuitBreaker", "claimCheck", "convertBodyTo", "convertHeaderTo", "convertVariableTo", "delay", "doCatch", "doFinally", "doTry", "dynamicRouter", "enrich", "filter", "idempotentConsumer", "intercept", "interceptFrom", "interceptSendToEndpoint", "kamelet", "loadBalance", "log", "loop", "marshal", "multicast", "onCompletion", "onException", "pausable", "pipeline", "policy", "poll", "pollEnrich", "process", "recipientList", "removeHeader", "removeHeaders", "removeProperties", "removeProperty", "removeVariable", "resequence", "resumable", "rollback", "routingSlip", "saga", "sample", "script", "serviceCall", "setBody", "setExchangePattern", "setHeader", "setHeaders", "setProperty", "setVariable", "setVariables", "sort", "split", "step", "stop", "threads", "throttle", "throwException", "to", "toD", "tokenizer", "transacted", "transform", "unmarshal", "validate", "wireTap" ], "deprecated": false, "autowired": false, "secret": false, "description": "Outputs are processors that determines how messages are processed by this workflow." }
  }
}
